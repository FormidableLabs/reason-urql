// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Urql = require("urql");
var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Dog$ReactTemplate = require("./Dog.bs.js");
var Connect$ReactTemplate = require("../../src/Connect.bs.js");

var component = ReasonReact.statelessComponent("DogList");

var query = Urql.query("\n    query {\n      dogs {\n        name\n        key\n        breed\n        description\n        imageUrl\n        likes\n      }\n    }\n ", undefined);

var likeDog = Urql.mutation("\n    mutation likeDog($key: ID!) {\n      likeDog(key: $key) {\n        name\n        key\n        breed\n        likes\n      }\n    }\n  ", undefined);

var mutationMap = { };

mutationMap["likeDog"] = likeDog;

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(/* None */0, /* None */0, Connect$ReactTemplate.make(/* Some */[/* `Query */[
                                -250086680,
                                query
                              ]], /* Some */[mutationMap], (function (result) {
                                var loaded = result.loaded;
                                var data = result.data;
                                var error = result.error;
                                if (error == null) {
                                  if (loaded) {
                                    return React.createElement("div", {
                                                style: {
                                                  display: "grid",
                                                  gridTemplateColumns: "1fr 1fr 1fr"
                                                }
                                              }, $$Array.map((function (dog) {
                                                      var key = dog.key;
                                                      return ReasonReact.element(/* Some */["" + (String(key) + "")], /* None */0, Dog$ReactTemplate.make(dog.description, key, dog.imageUrl, dog.name, dog.likes, (function (param) {
                                                                        result.likeDog(param);
                                                                        return /* () */0;
                                                                      }), /* array */[]));
                                                    }), data.dogs));
                                  } else {
                                    return React.createElement("div", undefined, "Loading");
                                  }
                                } else {
                                  return React.createElement("div", undefined, error.message);
                                }
                              }), /* None */0, /* None */0, /* None */0, /* array */[]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.query = query;
exports.mutationMap = mutationMap;
exports.make = make;
/* component Not a pure module */
