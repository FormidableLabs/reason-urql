// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Connect should render given a mutation map and a function for the render prop 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect
    cache={true}
    mutation={
      Object {
        "testMutation": Object {
          "query": "mutation likeDog($key: ID!)  {
likeDog(key: $key)  {
name  
key  
breed  
likes  
}

}
",
          "variables": Object {
            "key": "VmeRTX7j-",
          },
        },
      }
    }
    query={
      Object {
        "query": "query dogs  {
dogs  {
name  
breed  
description  
}

}
",
        "variables": Object {},
      }
    }
    typeInvalidation={true}
  >
    [Function]
  </Connect>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Connect should render given a query and a function for the render prop 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect
    cache={true}
    mutation={Object {}}
    query={
      Object {
        "query": "query dogs  {
dogs  {
name  
breed  
description  
}

}
",
        "variables": Object {},
      }
    }
    typeInvalidation={true}
  >
    [Function]
  </Connect>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
